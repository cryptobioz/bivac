name: Docker Image Release

on:
  release:
    types: [published]

env:
  IMAGE_NAME: camptocamp/bivac

jobs:
  push_to_registry:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker images
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          IMAGE_NAME=${{ env.IMAGE_NAME }} IMAGE_VERSION=${{ github.event.release.tag_name }} KEEP_IMAGES=yes make docker-images

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.release.tag_name }}
          regex: '^([0-9]+).([0-9]+).[0-9]+$'

      - name: Move tags and push to DockerHub
        if: ${{ steps.regex-match.outputs.match != '' }}
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create ${{ env.IMAGE_NAME }}:${{ steps.regex-match.outputs.group1 }}.${{ steps.regex-match.outputs.group2 }} \
            ${{ env.IMAGE_NAME }}-linux-amd64:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-386:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-arm:${{ github.event.release.tag_name }}
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-amd64:${{ github.event.release.tag_name }} --os linux --arch amd64
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-386:${{ github.event.release.tag_name }} --os linux --arch 386
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-arm:${{ github.event.release.tag_name }} --os linux --arch arm

          docker manifest create ${{ env.IMAGE_NAME }}:${{ steps.regex-match.outputs.group1 }} \
            ${{ env.IMAGE_NAME }}-linux-amd64:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-386:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-arm:${{ github.event.release.tag_name }}
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-amd64:${{ github.event.release.tag_name }} --os linux --arch amd64
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-386:${{ github.event.release.tag_name }} --os linux --arch 386
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}-linux-arm:${{ github.event.release.tag_name }} --os linux --arch arm
