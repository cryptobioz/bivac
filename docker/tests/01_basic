#!/bin/bash

# Prepare environment

test_valid=true
canary=8ft8HJ3teCg8S1WeH5bwhNBZEtBJNs
export AWS_ACCESS_KEY_ID=OBQZY3DV6VOEZ9PG6NIM
export AWS_SECRET_ACCESS_KEY=7e88XeX0j3YdB6b1o0zU2GhG0dX6tFMy3Haty

docker volume create canary
echo $canary | sudo tee /var/lib/docker/volumes/canary/_data/canary
sudo mkdir -p /var/lib/docker/volumes/canary/_data/foo/bar
echo $canary | sudo tee /var/lib/docker/volumes/canary/_data/foo/bar/canary

docker run -d --name mysql --rm -v mysql:/var/lib/mysql -e MYSQL_DATABASE=foo -e MYSQL_USER=foo -e MYSQL_PASSWORD=bar -e MYSQL_ROOT_PASSWORD=root mysql:latest
docker run -d --name postgres --rm -v postgres:/var/lib/postgresql/data postgres:latest
sleep 10



# Start Bivac
docker run -it --hostname=testing --name testing --rm -v /var/run/docker.sock:/var/run/docker.sock:ro -e BIVAC_TARGET_URL=s3:http://172.17.0.2:9000/bivac-testing/docker -e BIVAC_LOG_LEVEL=$2 -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e RESTIC_PASSWORD=toto $1

# Canaries
dump=$(docker run -it --rm -e RESTIC_PASSWORD=toto -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY restic/restic:latest -q -r s3:http://172.17.0.2:9000/bivac-testing/docker/testing/canary dump latest /var/lib/docker/volumes/canary/_data/canary)
dump=${dump%$'\r'}
if [[ $dump != $canary ]]; then
  echo -e "\e[31m[-] Basic : Docker + Restic (canary short)\e[39m"
  test_valid=false
fi
dump=$(docker run -it --rm -e RESTIC_PASSWORD=toto -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY restic/restic:latest -q -r s3:http://172.17.0.2:9000/bivac-testing/docker/testing/canary dump latest /var/lib/docker/volumes/canary/_data/foo/bar/canary)
dump=${dump%$'\r'}
if [[ $dump != $canary ]]; then
  echo -e "\e[31m[-] Basic : Docker + Restic (canary long)\e[39m"
  test_valid=false
fi

# MySQL
dump=$(docker run -it --rm -e RESTIC_PASSWORD=toto -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY restic/restic:latest -q -r s3:http://172.17.0.2:9000/bivac-testing/docker/testing/mysql dump latest /var/lib/docker/volumes/mysql/_data/backups/all.sql)
dump=${dump%$'\r'}
if [[ $dump != *"Dump completed"* ]]; then
  echo -e "\e[31m[-] Basic : Docker + Restic (mysql)\e[39m"
  test_valid=false
fi

# PostgreSQL
dump=$(docker run -it --rm -e RESTIC_PASSWORD=toto -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY restic/restic:latest -q -r s3:http://172.17.0.2:9000/bivac-testing/docker/testing/postgres dump latest /var/lib/docker/volumes/postgres/_data/backups/all.sql)
dump=${dump%$'\r'}
if [[ $dump != *"dump complete"* ]]; then
  echo -e "\e[31m[-] Basic : Docker + Restic (postgresql)\e[39m"
  test_valid=false
fi




if [ "$test_valid" = true ]; then
  echo -e "\e[32m[+] Basic : Docker + Restic\e[39m"
else
  echo -e "\e[31m[-] Basic : Docker + Restic\e[39m"
fi

# Clean up environment
docker volume rm canary
docker kill mysql
docker kill postgres
docker volume rm mysql
docker volume rm postgres
